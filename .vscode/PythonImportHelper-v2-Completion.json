[
    {
        "label": "Flask",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "render_template",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "redis",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "redis",
        "description": "redis",
        "detail": "redis",
        "documentation": {}
    },
    {
        "label": "socket",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "socket",
        "description": "socket",
        "detail": "socket",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "logging",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging",
        "description": "logging",
        "detail": "logging",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "AzureLogHandler",
        "importPath": "opencensus.ext.azure.log_exporter",
        "description": "opencensus.ext.azure.log_exporter",
        "isExtraImport": true,
        "detail": "opencensus.ext.azure.log_exporter",
        "documentation": {}
    },
    {
        "label": "metrics_exporter",
        "importPath": "opencensus.ext.azure",
        "description": "opencensus.ext.azure",
        "isExtraImport": true,
        "detail": "opencensus.ext.azure",
        "documentation": {}
    },
    {
        "label": "AzureExporter",
        "importPath": "opencensus.ext.azure.trace_exporter",
        "description": "opencensus.ext.azure.trace_exporter",
        "isExtraImport": true,
        "detail": "opencensus.ext.azure.trace_exporter",
        "documentation": {}
    },
    {
        "label": "FlaskMiddleware",
        "importPath": "opencensus.ext.flask.flask_middleware",
        "description": "opencensus.ext.flask.flask_middleware",
        "isExtraImport": true,
        "detail": "opencensus.ext.flask.flask_middleware",
        "documentation": {}
    },
    {
        "label": "aggregation",
        "importPath": "opencensus.stats",
        "description": "opencensus.stats",
        "isExtraImport": true,
        "detail": "opencensus.stats",
        "documentation": {}
    },
    {
        "label": "measure",
        "importPath": "opencensus.stats",
        "description": "opencensus.stats",
        "isExtraImport": true,
        "detail": "opencensus.stats",
        "documentation": {}
    },
    {
        "label": "stats",
        "importPath": "opencensus.stats",
        "description": "opencensus.stats",
        "isExtraImport": true,
        "detail": "opencensus.stats",
        "documentation": {}
    },
    {
        "label": "view",
        "importPath": "opencensus.stats",
        "description": "opencensus.stats",
        "isExtraImport": true,
        "detail": "opencensus.stats",
        "documentation": {}
    },
    {
        "label": "tag_map",
        "importPath": "opencensus.tags",
        "description": "opencensus.tags",
        "isExtraImport": true,
        "detail": "opencensus.tags",
        "documentation": {}
    },
    {
        "label": "ProbabilitySampler",
        "importPath": "opencensus.trace.samplers",
        "description": "opencensus.trace.samplers",
        "isExtraImport": true,
        "detail": "opencensus.trace.samplers",
        "documentation": {}
    },
    {
        "label": "Tracer",
        "importPath": "opencensus.trace.tracer",
        "description": "opencensus.trace.tracer",
        "isExtraImport": true,
        "detail": "opencensus.trace.tracer",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "azure-vote.main",
        "description": "azure-vote.main",
        "peekOfCode": "def index():\n    if request.method == 'GET':\n        # Get current values\n        vote1 = r.get(button1).decode('utf-8')\n        tracer.span(name=\"Cats_vote\")\n        vote2 = r.get(button2).decode('utf-8')\n        tracer.span(name=\"Dogs_vote\")\n        # Return index with values\n        return render_template(\"index.html\", value1=int(vote1), value2=int(vote2), button1=button1, button2=button2, title=title)\n    elif request.method == 'POST':",
        "detail": "azure-vote.main",
        "documentation": {}
    },
    {
        "label": "logger",
        "kind": 5,
        "importPath": "azure-vote.main",
        "description": "azure-vote.main",
        "peekOfCode": "logger = logging.getLogger(__name__)\nhandler = AzureLogHandler(connection_string='InstrumentationKey=5c679c51-03fc-4e47-a5f9-d7c4c1694621')\nlogger.addHandler(handler)\nlogger.setLevel(logging.INFO)\n# Metrics\nexporter = metrics_exporter.new_metrics_exporter(\nenable_standard_metrics=True,\nconnection_string='InstrumentationKey=5c679c51-03fc-4e47-a5f9-d7c4c1694621')\n# Tracing\ntracer = Tracer(",
        "detail": "azure-vote.main",
        "documentation": {}
    },
    {
        "label": "handler",
        "kind": 5,
        "importPath": "azure-vote.main",
        "description": "azure-vote.main",
        "peekOfCode": "handler = AzureLogHandler(connection_string='InstrumentationKey=5c679c51-03fc-4e47-a5f9-d7c4c1694621')\nlogger.addHandler(handler)\nlogger.setLevel(logging.INFO)\n# Metrics\nexporter = metrics_exporter.new_metrics_exporter(\nenable_standard_metrics=True,\nconnection_string='InstrumentationKey=5c679c51-03fc-4e47-a5f9-d7c4c1694621')\n# Tracing\ntracer = Tracer(\n    exporter=AzureExporter(",
        "detail": "azure-vote.main",
        "documentation": {}
    },
    {
        "label": "exporter",
        "kind": 5,
        "importPath": "azure-vote.main",
        "description": "azure-vote.main",
        "peekOfCode": "exporter = metrics_exporter.new_metrics_exporter(\nenable_standard_metrics=True,\nconnection_string='InstrumentationKey=5c679c51-03fc-4e47-a5f9-d7c4c1694621')\n# Tracing\ntracer = Tracer(\n    exporter=AzureExporter(\n        connection_string='InstrumentationKey=5c679c51-03fc-4e47-a5f9-d7c4c1694621'),\n    sampler=ProbabilitySampler(1.0),\n)\napp = Flask(__name__)",
        "detail": "azure-vote.main",
        "documentation": {}
    },
    {
        "label": "tracer",
        "kind": 5,
        "importPath": "azure-vote.main",
        "description": "azure-vote.main",
        "peekOfCode": "tracer = Tracer(\n    exporter=AzureExporter(\n        connection_string='InstrumentationKey=5c679c51-03fc-4e47-a5f9-d7c4c1694621'),\n    sampler=ProbabilitySampler(1.0),\n)\napp = Flask(__name__)\n# Requests\nmiddleware = FlaskMiddleware(\n    app,\n    exporter=AzureExporter(connection_string=\"InstrumentationKey=5c679c51-03fc-4e47-a5f9-d7c4c1694621\"),",
        "detail": "azure-vote.main",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "azure-vote.main",
        "description": "azure-vote.main",
        "peekOfCode": "app = Flask(__name__)\n# Requests\nmiddleware = FlaskMiddleware(\n    app,\n    exporter=AzureExporter(connection_string=\"InstrumentationKey=5c679c51-03fc-4e47-a5f9-d7c4c1694621\"),\n    sampler=ProbabilitySampler(rate=1.0),\n)\n# Load configurations from environment or config file\napp.config.from_pyfile('config_file.cfg')\nif (\"VOTE1VALUE\" in os.environ and os.environ['VOTE1VALUE']):",
        "detail": "azure-vote.main",
        "documentation": {}
    },
    {
        "label": "middleware",
        "kind": 5,
        "importPath": "azure-vote.main",
        "description": "azure-vote.main",
        "peekOfCode": "middleware = FlaskMiddleware(\n    app,\n    exporter=AzureExporter(connection_string=\"InstrumentationKey=5c679c51-03fc-4e47-a5f9-d7c4c1694621\"),\n    sampler=ProbabilitySampler(rate=1.0),\n)\n# Load configurations from environment or config file\napp.config.from_pyfile('config_file.cfg')\nif (\"VOTE1VALUE\" in os.environ and os.environ['VOTE1VALUE']):\n    button1 = os.environ['VOTE1VALUE']\nelse:",
        "detail": "azure-vote.main",
        "documentation": {}
    },
    {
        "label": "r",
        "kind": 5,
        "importPath": "azure-vote.main",
        "description": "azure-vote.main",
        "peekOfCode": "r = redis.Redis()\n# Change title to host name to demo NLB\nif app.config['SHOWHOST'] == \"true\":\n    title = socket.gethostname()\n# Init Redis\nif not r.get(button1): r.set(button1,0)\nif not r.get(button2): r.set(button2,0)\n@app.route('/', methods=['GET', 'POST'])\ndef index():\n    if request.method == 'GET':",
        "detail": "azure-vote.main",
        "documentation": {}
    }
]